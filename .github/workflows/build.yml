name: Multi-platform Build
on:
  push:
    branches:
      - master
      - action-test
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        build_type: [Debug, Release]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Download FFmpeg
        id: download_ffmpeg
        run: |
          wget -Uri https://www.gyan.dev/ffmpeg/builds/packages/ffmpeg-5.1.2-full_build-shared.7z -OutFile ffmpeg.7z
          7z x ffmpeg.7z -aoa
          echo "::set-output name=path::$pwd.Path"
      - name: Build
        run: |
          $env:FFMPEG_PREFIX="${{ steps.download_ffmpeg.outputs.path }}"
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DUSE_STATIC=ON ..
          cmake --build . --config ${{ matrix.build_type }}
      - name: Publish Artifacts
        if: ${{ matrix.os }} == "windows-latest"
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.build_type }}
          path: |
            build/${{ matrix.build_type }}/rtc.*
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Restore All Artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: Publish Release
      id: rtc_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'latest'
        name: latest-${{ steps.date.outputs.date }}
        draft: false
        prerelease: false
        files: artifacts/**/*
